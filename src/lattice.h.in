#ifndef LATTICE_H
#define LATTICE_H

#include <stdint.h>

#define LT_D    @LT_D@
#define LT_LMAX @LT_LMAX@
#define LT_N    @LT_N@

#define BC_PERIODIC 0
#define BC_FREE 1

#define BC @BC@

#define LT_Z (2*LT_D)

typedef uint64_t site_label;

typedef struct
{
    int *shape;
    site_label stride[LT_D];
    int diff[LT_Z][LT_LMAX];
}
lattice;

typedef struct
{
    int i, x[LT_D];
    site_label site, r;
}
neighbor_iter;

void lattice_init(lattice *l, int *shape);

void neighbor_iter_init(site_label const site, neighbor_iter *iter);

site_label neighbor_iter_next(lattice const *l, neighbor_iter *iter);

#endif
